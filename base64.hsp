
#ifndef Base64

#define Base64
#define ctype b64en(%1,%2=0) _b64en(%1,%2)
#module
#deffunc b64init
	sdim dic
	dic="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
	dim dicnum,256
	repeat strlen(dic)
		id=peek(dic,cnt)
		dicnum(id)=cnt
	loop
	eof="="
	return
#defcfunc _b64en array m_arr,int m_size
	if m_size>0{
		size=m_size
	}else{
		if vartype(m_arr)=2{
			size=varsize(m_arr)
		}else:if vartype(m_arr)=3{
			size=length(m_arr)
			if length2(m_arr)>0:size*=length2(m_arr)
			if length3(m_arr)>0:size*=length3(m_arr)
			if length4(m_arr)>0:size*=length4(m_arr)
			size*=8
		}else:if vartype(m_arr)=4{
			size=length(m_arr)
			if length2(m_arr)>0:size*=length2(m_arr)
			if length3(m_arr)>0:size*=length3(m_arr)
			if length4(m_arr)>0:size*=length4(m_arr)
			size*=4
		}else{
			dialog"エンコード出来る型ではありません",1
			wait 100
			return
		}
	}
	sdim res,size*4/3
	id=0
	repeat
		if id>=size:break
		switch cnt\4
		case 0
			chkid=peek(m_arr,id)>>2
		swbreak
		case 1
			chkid=peek(m_arr,id)<<4&%110000
			id++
			if id<size{
				chkid|=(peek(m_arr,id)>>4)&%1111
			}
		swbreak
		case 2
			chkid=peek(m_arr,id)<<2&%111100
			id++
			if id<size{
				chkid|=(peek(m_arr,id)>>6)&%11
			}
		swbreak
		case 3
			chkid=peek(m_arr,id)&%111111
			id++
		swbreak
		swend
		res+=strf("%c",peek(dic,chkid))
	loop
	if strlen(res)\4!=0{
		repeat 4-strlen(res)\4
			res+=eof
		loop
	}
	return res
#deffunc b64de array t_af,str m_bf
	t_bf=m_bf
	size=strlen(t_bf)
	if size<=1:return
	repeat size
		if peek(t_bf,size-1)=61{	;=
			size--
		}else{
			break
		}
	loop
	if size<=1:return
	ressize=size*6/8
	if varsize(t_af)<ressize{
		if vartype(t_af)=2{
			sdim t_af,ressize
		}else:if vartype(t_af)=3{
			if ressize\8>0{
				ddim t_af,ressize/8+1
			}else{
				ddim t_af,ressize/8
			}
		}else:if vartype(t_af)=4{
			if ressize\4>0{
				dim t_af,ressize/4+1
			}else{
				dim t_af,ressize/4
			}
		}
	}
	id=0
	repeat
		switch cnt\3
		case 0
			setchar=dicnum(peek(t_bf,id))<<2
			id++
			if id<size{
				setchar|=dicnum(peek(t_bf,id))>>4
			}
		swbreak
		case 1
			setchar=dicnum(peek(t_bf,id))<<4&%11110000
			id++
			if id<size{
				setchar|=dicnum(peek(t_bf,id))>>2
			}
		swbreak
		case 2
			setchar=dicnum(peek(t_bf,id))<<6&%11000000
			id++
			if id<size{
				setchar|=dicnum(peek(t_bf,id))
			}
		swbreak
		swend
		if id>=size:break
		if cnt\3=2:id++
		memcpy t_af,setchar,1,cnt,0
	loop
	return
#global

b64init

#endif
